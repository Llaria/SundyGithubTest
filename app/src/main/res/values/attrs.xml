<?xml version="1.0" encoding="utf-8"?>
<resources>
    
    <!-- 方便复制 -->
    <!-- 
            后面的com.example.kaicomframeworksample为客户应用的包名
    xmlns:kaicom="http://schemas.android.com/apk/res/com.example.kaicomframeworksample"
    
    kaicom:maxByteLength="12"
    kaicom:rawInputType="number"
    kaicom:showSoftKeyboard="false"
    kaicom:hideImeWithLostFocus="true"
    
    kaicom:interceptKeyUp="true"
    
           在style中的写法：
    <item name="com.example.kaicomframeworksample:interceptKeyUp">true</item>
    
     -->
	
    <!-- 编辑框属性 -->
    <declare-styleable name="StdEditText">
        <!-- 字符限制 -->
        <attr name="maxByteLength" format="integer" />
        <!-- 是否可弹出软键盘，默认为可以(true) -->
        <attr name="showSoftKeyboard" format="boolean"/>
        <!-- 控件失去焦点时，是否隐藏软键盘,默认为false -->
        <attr name="hideImeWithLostFocus" format="boolean"/>
        <!-- 默认输入法 -->
        <attr name="rawInputType" format="integer">
            <!-- 默认数字，实际类型是InputType.TYPE_CLASS_PHONE -->
            <enum name="number" value="0x00000003" />
            <enum name="text" value="0x00000001" />
        </attr>

    </declare-styleable>
    
    <declare-styleable name="DelBackEditText">
        
        <!-- 需要拦截的按键 -->
        <attr name="interceptKeyUp" format="boolean"/>
        <attr name="interceptKeyDown" format="boolean"/>
        <attr name="interceptKeyLeft" format="boolean"/>
        <attr name="interceptKeyRight" format="boolean"/>
        
    </declare-styleable>


    <!--扫码核心控制-->

    <declare-styleable name="QRCodeView">
        <!-- 扫描框距离toolbar底部的距离，默认值为90dp -->
        <attr name="qrcv_topOffset" format="dimension|reference" />
        <!-- 扫描框边角线的宽度，默认值为3dp -->
        <attr name="qrcv_cornerSize" format="dimension|reference" />
        <!-- 扫描框边角线的长度，默认值为20dp -->
        <attr name="qrcv_cornerLength" format="dimension|reference" />
        <!-- 扫描框边角线的颜色，默认值为@android:color/white -->
        <attr name="qrcv_cornerColor" format="color|reference" />
        <!-- 扫描框边角线显示位置(相对于边框)，默认值为中间 -->
        <attr name="qrcv_cornerDisplayType">
            <enum name="center" value="1" />
            <enum name="inside" value="2" />
        </attr>
        <!-- 扫描框的宽度，默认值为200dp -->
        <attr name="qrcv_rectWidth" format="dimension|reference" />
        <!-- 条码扫样式描框的高度，默认值为140dp -->
        <attr name="qrcv_barcodeRectHeight" format="dimension|reference" />
        <!-- 除去扫描框，其余部分阴影颜色，默认值为#33FFFFFF -->
        <attr name="qrcv_maskColor" format="color|reference" />
        <!-- 扫描线的宽度，默认值为1dp -->
        <attr name="qrcv_scanLineSize" format="dimension|reference" />
        <!-- 扫描线的颜色，默认值为@android:color/white -->
        <attr name="qrcv_scanLineColor" format="color|reference" />
        <!-- 扫描线距离上下或者左右边框的间距，默认值为0dp -->
        <attr name="qrcv_scanLineMargin" format="dimension|reference" />
        <!-- 是否显示默认的图片扫描线，默认值为false -->
        <attr name="qrcv_isShowDefaultScanLineDrawable" format="boolean" />
        <!-- 扫描线的图片资源，默认值为null -->
        <attr name="qrcv_customScanLineDrawable" format="reference" />
        <!-- 扫描边框的宽度，默认值为1dp -->
        <attr name="qrcv_borderSize" format="dimension|reference" />
        <!-- 扫描边框的颜色，默认值为@android:color/white -->
        <attr name="qrcv_borderColor" format="color|reference" />
        <!-- 扫描线从顶部移动到底部的动画时间，默认值为1000 -->
        <attr name="qrcv_animTime" format="integer" />
        <!-- 扫描框中心点在屏幕垂直方向的比例，当设置此值时，会忽略 qrcv_topOffset -->
        <attr name="qrcv_verticalBias" format="float" />
        <!-- Toolbar的高度，当有设置qrcv_isCenterVertical属性时，通过该属性来修正有Toolbar时导致扫描框垂直居中的偏差，默认值为0dp -->
        <attr name="qrcv_toolbarHeight" format="dimension|reference" />
        <!-- 扫描框的样式是否为扫条形码样式，默认值为false -->
        <attr name="qrcv_isBarcode" format="boolean" />
        <!-- 扫描二维码时的提示文案，默认值为null -->
        <attr name="qrcv_qrCodeTipText" format="string|reference" />
        <!-- 扫描条码时的提示文案，默认值为null -->
        <attr name="qrcv_barCodeTipText" format="string|reference" />
        <!-- 提示文案字体大小，默认值为14sp -->
        <attr name="qrcv_tipTextSize" format="dimension|reference" />
        <!-- 提示文案颜色，默认值为@android:color/white -->
        <attr name="qrcv_tipTextColor" format="color|reference" />
        <!-- 提示文案是否在扫描框的底部，默认值为false -->
        <attr name="qrcv_isTipTextBelowRect" format="boolean" />
        <!-- 提示文案与扫描框之间的间距，默认值为20dp -->
        <attr name="qrcv_tipTextMargin" format="dimension|reference" />
        <!-- 是否把提示文案作为单行显示，默认值为false -->
        <attr name="qrcv_isShowTipTextAsSingleLine" format="boolean" />
        <!-- 是否显示提示文案的背景，默认值为false -->
        <attr name="qrcv_isShowTipBackground" format="boolean" />
        <!-- 提示文案的背景色，默认值为#22000000 -->
        <attr name="qrcv_tipBackgroundColor" format="color|reference" />
        <!-- 扫描线是否来回移动，默认值为true -->
        <attr name="qrcv_isScanLineReverse" format="boolean" />
        <!-- 是否显示默认的网格图片扫描线，默认值为false -->
        <attr name="qrcv_isShowDefaultGridScanLineDrawable" format="boolean" />
        <!-- 扫描线的网格图片资源，默认值为null -->
        <attr name="qrcv_customGridScanLineDrawable" format="reference" />
        <!-- 是否只识别扫描框中的码，默认值为false -->
        <attr name="qrcv_isOnlyDecodeScanBoxArea" format="boolean" />
        <!-- 是否显示定位点，默认值为false -->
        <attr name="qrcv_isShowLocationPoint" format="boolean" />
        <!-- 码太小时是否自动缩放，默认值为false -->
        <attr name="qrcv_isAutoZoom" format="boolean" />
    </declare-styleable>


</resources>